n_sim <- 100
# Initialize a vector
interaction_risk_results_case2 <- rep(0, times = length(interaction_risk_vec))
# Simulate for each value of interaction_risk
for (i in 1:length(interaction_risk_vec)){
# Initialize matrix for results
hcw_risk_mat_case2 <- matrix(nrow = n_sim, ncol = 30)
# Simulate the model across chosen number of simulations
for (j in 1:n_sim){
hcw_risk_mat_case2[j,] <- simulate_hcw_risk_case2(n_s = 3,
n_p = 3,
n_donors = 20,
n_days = 30,
interaction_risk = interaction_risk_vec[i])
}
# Take the average across all simulations
interm_hcw_risk_mean_case2 <- apply(hcw_risk_mat_case2, MARGIN = 2, FUN = mean)
# Store into result vector
interaction_risk_results_case2[i] <- interm_hcw_risk_mean_case2[length(interm_hcw_risk_mean_case2)]
}
interaction_risk_df_case2 <- data.frame(interaction_risk_results_case2)
ggplot(data = interaction_risk_df_case2, aes(y = interaction_risk_results_case2, x = interaction_risk_vec)) +
labs(x = "Interaction Risk", y = "", title ="Case 2: Proportion of Healthcare Workers Infected by Final Day",
subtitle = paste("Averaged across",n_sim,"simulations")) + ylim(0,1) +
geom_line() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
donor_new_cases_case2 <- simulate_donor_risk_case2(n_s = 3,
n_p = 3,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002,
proportion_positive = 0.1)
donor_new_cases_df_case2 <- as.data.frame(donor_new_cases_case2)
ggplot(data = donor_new_cases_df_case2, aes(y = donor_new_cases_case2, x = 1:length(donor_new_cases_case2))) +
labs(x = "Days", y = "", title = "Case 2: Number of Donors Contracting Virus from Donation Site") +
geom_step() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
#Mean
n_sim <- 100
donor_risk_mat_case2 <- matrix(nrow = n_sim, ncol = 30)
for (i in 1:n_sim){
donor_risk_mat_case2[i,] <- simulate_donor_risk_case2(n_s = 3,
n_p = 3,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002,
proportion_positive = 0.1)
}
donor_risk_mean_case2 <- apply(donor_risk_mat_case2, MARGIN = 2, FUN = mean)
donor_risk_mean_df_case2 <- data.frame(donor_risk_mean_case2)
ggplot(data = donor_risk_mean_df_case2, aes(y = donor_risk_mean_case2, x = 1:length(donor_risk_mean_case2))) +
labs(x = "Days", y = "", title = "Case 2: Number of Donors Contracting Virus from Donation Site",
subtitle = paste("Average across",n_sim,"simulations")) +
geom_line() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Vary interaction scores
# Set which values of interaction_risk to explore
interaction_risk_vec <- seq(from = 0.0001, to = 0.02, by = 0.001)
# Set the number of simulations
n_sim <- 100
# Initialize a vector
interaction_risk_results_donor_case2 <- rep(0, times = length(interaction_risk_vec))
# Simulate for each value of interaction_risk
for (i in 1:length(interaction_risk_vec)){
# Initialize matrix for results
donor_risk_mat_case2 <- matrix(nrow = n_sim, ncol = n_days)
# Simulate the model across chosen number of simulations
for (j in 1:n_sim){
donor_risk_mat_case2[j,] <- simulate_donor_risk_case2(n_s = 3,
n_p = 3,
n_donors = 20,
n_days = 30,
interaction_risk = interaction_risk_vec[i],
proportion_positive = 0.1)
}
# Take the average across all simulations
interm_donor_risk_mean_case2 <- apply(donor_risk_mat_case2, MARGIN = 2, FUN = mean)
# Store into result vector
interaction_risk_results_donor_case2[i] <- interm_donor_risk_mean_case2[length(interm_donor_risk_mean_case2)]
}
# Plot the result
interaction_risk_df_donor_case2 <- data.frame(interaction_risk_results_donor_case2)
ggplot(data = interaction_risk_df_donor_case2, aes(y = interaction_risk_results_donor_case2,
x = interaction_risk_vec)) +
labs(x = "Interaction Risk", y = "",
title = "Case 2: Number of New Cases Acquired from Donation Site at Final Day",
subtitle = paste("Averaged across",n_sim,"simulations")) +
geom_line() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 14), axis.title.y = element_text(size = 14))
hcw_risk_vec_case3 <- simulate_hcw_risk_case3(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002)
hcw_risk_df_case3 <- as.data.frame(hcw_risk_vec_case3)
ggplot(data = hcw_risk_df_case3, aes(y = hcw_risk_vec_case3, x = 1:length(hcw_risk_vec_case3))) +
labs(x = "Days", y = "", title = "Case 3: Proportion of Healthcare Workers Contracting Virus") + ylim(0,1) +
geom_step() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Mean
n_sim <- 100
hcw_risk_mat_case3 <- matrix(nrow = n_sim, ncol = 30)
for (i in 1:n_sim){
hcw_risk_mat_case3[i,] <- simulate_hcw_risk_case3(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002)
}
hcw_risk_mean_case3 <- apply(hcw_risk_mat_case3, MARGIN = 2, FUN = mean)
hcw_risk_mean_df_case3 <- data.frame(hcw_risk_mean_case3)
ggplot(data = hcw_risk_mean_df_case3, aes(y = hcw_risk_mean_case3, x = 1:length(hcw_risk_mean_case3))) +
labs(x = "Days", y = "", title = "Case 3: Proportion of Healthcare Workers Contracting Virus",
subtitle = paste("Average across",n_sim,"simulations")) + ylim(0,1) +
geom_line() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Varying interaction score
# Set which values of interaction_risk to explore
interaction_risk_vec <- seq(from = 0.0001, to = 0.02, by = 0.001)
# Set the number of simulations
n_sim <- 100
# Initialize a vector
interaction_risk_results_case3 <- rep(0, times = length(interaction_risk_vec))
# Simulate for each value of interaction_risk
for (i in 1:length(interaction_risk_vec)){
# Initialize matrix for results
hcw_risk_mat_case3 <- matrix(nrow = n_sim, ncol = 30)
# Simulate the model across chosen number of simulations
for (j in 1:n_sim){
hcw_risk_mat_case3[j,] <- simulate_hcw_risk_case3(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = interaction_risk_vec[i])
}
# Take the average across all simulations
interm_hcw_risk_mean_case3 <- apply(hcw_risk_mat_case3, MARGIN = 2, FUN = mean)
# Store into result vector
interaction_risk_results_case3[i] <- interm_hcw_risk_mean_case3[length(interm_hcw_risk_mean_case3)]
}
interaction_risk_df_case3 <- data.frame(interaction_risk_results_case3)
ggplot(data = interaction_risk_df_case3, aes(y = interaction_risk_results_case3, x = interaction_risk_vec)) +
labs(x = "Interaction Risk", y = "", title ="Case 3: Proportion of Healthcare Workers Infected by Final Day",
subtitle = paste("Averaged across",n_sim,"simulations")) + ylim(0,1) +
geom_line() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
donor_new_cases_case3 <- simulate_donor_risk_case3(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002,
proportion_positive = 0.1)
donor_new_cases_df_case3 <- as.data.frame(donor_new_cases_case3)
ggplot(data = donor_new_cases_df_case3, aes(y = donor_new_cases_case3, x = 1:length(donor_new_cases_case3))) +
labs(x = "Days", y = "", title = "Case 3: Number of Donors Contracting Virus from Donation Site") +
geom_step() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
#Mean
n_sim <- 100
donor_risk_mat_case3 <- matrix(nrow = n_sim, ncol = 30)
for (i in 1:n_sim){
donor_risk_mat_case3[i,] <- simulate_donor_risk_case3(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002,
proportion_positive = 0.1)
}
donor_risk_mean_case3 <- apply(donor_risk_mat_case3, MARGIN = 2, FUN = mean)
donor_risk_mean_df_case3 <- data.frame(donor_risk_mean_case3)
ggplot(data = donor_risk_mean_df_case3, aes(y = donor_risk_mean_case3, x = 1:length(donor_risk_mean_case3))) +
labs(x = "Days", y = "", title = "Case 3: Number of Donors Contracting Virus from Donation Site",
subtitle = paste("Average across",n_sim,"simulations")) +
geom_line() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Vary interaction scores
# Set which values of interaction_risk to explore
interaction_risk_vec <- seq(from = 0.0001, to = 0.02, by = 0.001)
# Set the number of simulations
n_sim <- 100
# Initialize a vector
interaction_risk_results_donor_case3 <- rep(0, times = length(interaction_risk_vec))
# Simulate for each value of interaction_risk
for (i in 1:length(interaction_risk_vec)){
# Initialize matrix for results
donor_risk_mat_case3 <- matrix(nrow = n_sim, ncol = n_days)
# Simulate the model across chosen number of simulations
for (j in 1:n_sim){
donor_risk_mat_case3[j,] <- simulate_donor_risk_case3(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = interaction_risk_vec[i],
proportion_positive = 0.1)
}
# Take the average across all simulations
interm_donor_risk_mean_case3 <- apply(donor_risk_mat_case3, MARGIN = 2, FUN = mean)
# Store into result vector
interaction_risk_results_donor_case3[i] <- interm_donor_risk_mean_case3[length(interm_donor_risk_mean_case3)]
}
# Plot the result
interaction_risk_df_donor_case3 <- data.frame(interaction_risk_results_donor_case3)
ggplot(data = interaction_risk_df_donor_case3, aes(y = interaction_risk_results_donor_case3,
x = interaction_risk_vec)) +
labs(x = "Interaction Risk", y = "",
title = "Case 3: Number of New Cases Acquired from Donation Site at Final Day",
subtitle = paste("Averaged across",n_sim,"simulations")) +
geom_line() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 14), axis.title.y = element_text(size = 14))
hcw_risk_vec_case4 <- simulate_hcw_risk_case4(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002)
hcw_risk_df_case4 <- as.data.frame(hcw_risk_vec_case4)
ggplot(data = hcw_risk_df_case4, aes(y = hcw_risk_vec_case4, x = 1:length(hcw_risk_vec_case4))) +
labs(x = "Days", y = "", title = "Case 4: Proportion of Healthcare Workers Contracting Virus") + ylim(0,1) +
geom_step() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Mean
n_sim <- 100
hcw_risk_mat_case4 <- matrix(nrow = n_sim, ncol = 30)
for (i in 1:n_sim){
hcw_risk_mat_case4[i,] <- simulate_hcw_risk_case4(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002)
}
hcw_risk_mean_case4 <- apply(hcw_risk_mat_case4, MARGIN = 2, FUN = mean)
hcw_risk_mean_df_case4 <- data.frame(hcw_risk_mean_case4)
ggplot(data = hcw_risk_mean_df_case4, aes(y = hcw_risk_mean_case4, x = 1:length(hcw_risk_mean_case4))) +
labs(x = "Days", y = "", title = "Case 4: Proportion of Healthcare Workers Contracting Virus",
subtitle = paste("Average across",n_sim,"simulations")) + ylim(0,1) +
geom_line() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Varying interaction score
# Set which values of interaction_risk to explore
interaction_risk_vec <- seq(from = 0.0001, to = 0.02, by = 0.001)
# Set the number of simulations
n_sim <- 100
# Initialize a vector
interaction_risk_results_case4 <- rep(0, times = length(interaction_risk_vec))
# Simulate for each value of interaction_risk
for (i in 1:length(interaction_risk_vec)){
# Initialize matrix for results
hcw_risk_mat_case4 <- matrix(nrow = n_sim, ncol = 30)
# Simulate the model across chosen number of simulations
for (j in 1:n_sim){
hcw_risk_mat_case4[j,] <- simulate_hcw_risk_case4(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = interaction_risk_vec[i])
}
# Take the average across all simulations
interm_hcw_risk_mean_case4 <- apply(hcw_risk_mat_case4, MARGIN = 2, FUN = mean)
# Store into result vector
interaction_risk_results_case4[i] <- interm_hcw_risk_mean_case4[length(interm_hcw_risk_mean_case4)]
}
interaction_risk_df_case4 <- data.frame(interaction_risk_results_case4)
ggplot(data = interaction_risk_df_case4, aes(y = interaction_risk_results_case4, x = interaction_risk_vec)) +
labs(x = "Interaction Risk", y = "", title ="Case 4: Proportion of Healthcare Workers Infected by Final Day",
subtitle = paste("Averaged across",n_sim,"simulations")) + ylim(0,1) +
geom_line() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
donor_new_cases_case4 <- simulate_donor_risk_case4(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002,
proportion_positive = 0.1)
donor_new_cases_df_case4 <- as.data.frame(donor_new_cases_case4)
ggplot(data = donor_new_cases_df_case4, aes(y = donor_new_cases_case4, x = 1:length(donor_new_cases_case4))) +
labs(x = "Days", y = "", title = "Case 4: Number of Donors Contracting Virus from Donation Site") +
geom_step() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
#Mean
n_sim <- 100
donor_risk_mat_case4 <- matrix(nrow = n_sim, ncol = 30)
for (i in 1:n_sim){
donor_risk_mat_case4[i,] <- simulate_donor_risk_case4(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002,
proportion_positive = 0.1)
}
donor_risk_mean_case4 <- apply(donor_risk_mat_case4, MARGIN = 2, FUN = mean)
donor_risk_mean_df_case4 <- data.frame(donor_risk_mean_case4)
ggplot(data = donor_risk_mean_df_case4, aes(y = donor_risk_mean_case4, x = 1:length(donor_risk_mean_case4))) +
labs(x = "Days", y = "", title = "Case 4: Number of Donors Contracting Virus from Donation Site",
subtitle = paste("Average across",n_sim,"simulations")) +
geom_line() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Vary interaction scores
# Set which values of interaction_risk to explore
interaction_risk_vec <- seq(from = 0.0001, to = 0.02, by = 0.001)
# Set the number of simulations
n_sim <- 100
# Initialize a vector
interaction_risk_results_donor_case4 <- rep(0, times = length(interaction_risk_vec))
# Simulate for each value of interaction_risk
for (i in 1:length(interaction_risk_vec)){
# Initialize matrix for results
donor_risk_mat_case4 <- matrix(nrow = n_sim, ncol = n_days)
# Simulate the model across chosen number of simulations
for (j in 1:n_sim){
donor_risk_mat_case4[j,] <- simulate_donor_risk_case4(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = interaction_risk_vec[i],
proportion_positive = 0.1)
}
# Take the average across all simulations
interm_donor_risk_mean_case4 <- apply(donor_risk_mat_case4, MARGIN = 2, FUN = mean)
# Store into result vector
interaction_risk_results_donor_case4[i] <- interm_donor_risk_mean_case4[length(interm_donor_risk_mean_case4)]
}
# Plot the result
interaction_risk_df_donor_case4 <- data.frame(interaction_risk_results_donor_case4)
ggplot(data = interaction_risk_df_donor_case4, aes(y = interaction_risk_results_donor_case4,
x = interaction_risk_vec)) +
labs(x = "Interaction Risk", y = "",
title = "Case 4: Number of New Cases Acquired from Donation Site at Final Day",
subtitle = paste("Averaged across",n_sim,"simulations")) +
geom_line() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 14), axis.title.y = element_text(size = 14))
hcw_risk_vec_case5 <- simulate_hcw_risk_case5(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002,
assist_rate = 0.2)
hcw_risk_df_case5 <- as.data.frame(hcw_risk_vec_case5)
ggplot(data = hcw_risk_df_case5, aes(y = hcw_risk_vec_case5, x = 1:length(hcw_risk_vec_case5))) +
labs(x = "Days", y = "", title = "Case 5: Proportion of Healthcare Workers Contracting Virus") + ylim(0,1) +
geom_step() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Mean
n_sim <- 100
hcw_risk_mat_case5 <- matrix(nrow = n_sim, ncol = 30)
for (i in 1:n_sim){
hcw_risk_mat_case5[i,] <- simulate_hcw_risk_case5(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002,
assist_rate = 0.2)
}
hcw_risk_mean_case5 <- apply(hcw_risk_mat_case5, MARGIN = 2, FUN = mean)
hcw_risk_mean_df_case5 <- data.frame(hcw_risk_mean_case5)
ggplot(data = hcw_risk_mean_df_case5, aes(y = hcw_risk_mean_case5, x = 1:length(hcw_risk_mean_case5))) +
labs(x = "Days", y = "", title = "Case 5: Proportion of Healthcare Workers Contracting Virus",
subtitle = paste("Average across",n_sim,"simulations")) + ylim(0,1) +
geom_line() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Varying interaction score
# Set which values of interaction_risk to explore
interaction_risk_vec <- seq(from = 0.0001, to = 0.02, by = 0.001)
# Set the number of simulations
n_sim <- 100
# Initialize a vector
interaction_risk_results_case5 <- rep(0, times = length(interaction_risk_vec))
# Simulate for each value of interaction_risk
for (i in 1:length(interaction_risk_vec)){
# Initialize matrix for results
hcw_risk_mat_case5 <- matrix(nrow = n_sim, ncol = 30)
# Simulate the model across chosen number of simulations
for (j in 1:n_sim){
hcw_risk_mat_case5[j,] <- simulate_hcw_risk_case5(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = interaction_risk_vec[i],
assist_rate = 0.2)
}
# Take the average across all simulations
interm_hcw_risk_mean_case5 <- apply(hcw_risk_mat_case5, MARGIN = 2, FUN = mean)
# Store into result vector
interaction_risk_results_case5[i] <- interm_hcw_risk_mean_case5[length(interm_hcw_risk_mean_case5)]
}
interaction_risk_df_case5 <- data.frame(interaction_risk_results_case5)
ggplot(data = interaction_risk_df_case5, aes(y = interaction_risk_results_case5, x = interaction_risk_vec)) +
labs(x = "Interaction Risk", y = "", title ="Case 5: Proportion of Healthcare Workers Infected by Final Day",
subtitle = paste("Averaged across",n_sim,"simulations")) + ylim(0,1) +
geom_line() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
donor_new_cases_case5 <- simulate_donor_risk_case5(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002,
proportion_positive = 0.1,
assist_rate = 0.2)
donor_new_cases_df_case5 <- as.data.frame(donor_new_cases_case5)
ggplot(data = donor_new_cases_df_case5, aes(y = donor_new_cases_case5, x = 1:length(donor_new_cases_case5))) +
labs(x = "Days", y = "", title = "Case 5: Number of Donors Contracting Virus from Donation Site") +
geom_step() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
#Mean
n_sim <- 100
donor_risk_mat_case5 <- matrix(nrow = n_sim, ncol = 30)
for (i in 1:n_sim){
donor_risk_mat_case5[i,] <- simulate_donor_risk_case5(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = 0.002,
proportion_positive = 0.1,
assist_rate = 0.2)
}
donor_risk_mean_case5 <- apply(donor_risk_mat_case5, MARGIN = 2, FUN = mean)
donor_risk_mean_df_case5 <- data.frame(donor_risk_mean_case5)
ggplot(data = donor_risk_mean_df_case5, aes(y = donor_risk_mean_case5, x = 1:length(donor_risk_mean_case5))) +
labs(x = "Days", y = "", title = "Case 5: Number of Donors Contracting Virus from Donation Site",
subtitle = paste("Average across",n_sim,"simulations")) +
geom_line() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Vary interaction scores
# Set which values of interaction_risk to explore
interaction_risk_vec <- seq(from = 0.0001, to = 0.02, by = 0.001)
# Set the number of simulations
n_sim <- 100
# Initialize a vector
interaction_risk_results_donor_case5 <- rep(0, times = length(interaction_risk_vec))
# Simulate for each value of interaction_risk
for (i in 1:length(interaction_risk_vec)){
# Initialize matrix for results
donor_risk_mat_case5 <- matrix(nrow = n_sim, ncol = n_days)
# Simulate the model across chosen number of simulations
for (j in 1:n_sim){
donor_risk_mat_case5[j,] <- simulate_donor_risk_case5(n_hcw = 6,
n_donors = 20,
n_days = 30,
interaction_risk = interaction_risk_vec[i],
proportion_positive = 0.1,
assist_rate = 0.2)
}
# Take the average across all simulations
interm_donor_risk_mean_case5 <- apply(donor_risk_mat_case5, MARGIN = 2, FUN = mean)
# Store into result vector
interaction_risk_results_donor_case5[i] <- interm_donor_risk_mean_case5[length(interm_donor_risk_mean_case5)]
}
# Plot the result
interaction_risk_df_donor_case5 <- data.frame(interaction_risk_results_donor_case5)
ggplot(data = interaction_risk_df_donor_case5, aes(y = interaction_risk_results_donor_case5,
x = interaction_risk_vec)) +
labs(x = "Interaction Risk", y = "",
title = "Case 5: Number of New Cases Acquired from Donation Site at Final Day",
subtitle = paste("Averaged across",n_sim,"simulations")) +
geom_line() + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 14), axis.title.y = element_text(size = 14))
hcw_risk_mean_combined <- data.frame(case1 = hcw_risk_mean_case1,
case2 = hcw_risk_mean_case2,
case3 = hcw_risk_mean_case3,
case4 = hcw_risk_mean_case4,
case5 = hcw_risk_mean_case5,
time = 1:n_days)
hcw_risk_mean_combined_melted <- melt(hcw_risk_mean_combined, id = 'time')
ggplot(data = hcw_risk_mean_combined_melted, aes(y = value, x = time, color = variable)) +
labs(x = "Days", y = "", title = "Proportion of Healthcare Workers Contracting Virus",
subtitle = paste("Average across",n_sim,"simulations")) + ylim(0,1) +
geom_line(size = 1) + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Varying interaction risk
interaction_risk_combined <- data.frame(case1 = interaction_risk_results_case1,
case2 = interaction_risk_results_case2,
case3 = interaction_risk_results_case3,
case4 = interaction_risk_results_case4,
case5 = interaction_risk_results_case5,
interaction = interaction_risk_vec)
interaction_risk_combined_melted <- melt(interaction_risk_combined, id = 'interaction')
ggplot(data = interaction_risk_combined_melted, aes(y = value, x = interaction, color = variable)) +
labs(x = "Interaction Risk", y = "", title ="Proportion of Healthcare Workers Infected by Final Day",
subtitle = paste("Averaged across",n_sim,"simulations")) + ylim(0,1) +
geom_line(size = 1) + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
donor_risk_mean_combined <- data.frame(case1 = donor_risk_mean_case1,
case2 = donor_risk_mean_case2,
case3 = donor_risk_mean_case3,
case4 = donor_risk_mean_case4,
case5 = donor_risk_mean_case5,
time = 1:n_days)
donor_risk_mean_combined_melted <- melt(donor_risk_mean_combined, id = 'time')
ggplot(data = donor_risk_mean_combined_melted, aes(y = value, x = time, color = variable)) +
labs(x = "Days", y = "", title = "Number of Donors Contracting Virus from Donation Site",
subtitle = paste("Average across",n_sim,"simulations")) +
geom_line(size = 1) + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Varying interaction risk
interaction_risk_donor_combined <- data.frame(case1 = interaction_risk_results_donor_case1,
case2 = interaction_risk_results_donor_case2,
case3 = interaction_risk_results_donor_case3,
case4 = interaction_risk_results_donor_case4,
case5 = interaction_risk_results_donor_case5,
interaction = interaction_risk_vec)
interaction_risk_donor_combined_melted <- melt(interaction_risk_donor_combined, id = 'interaction')
ggplot(data = interaction_risk_donor_combined_melted, aes(y = value, x = interaction, color = variable)) +
labs(x = "Interaction Risk", y = "", title ="Number of New Cases Acquired from Donation Site at Final Day",
subtitle = paste("Averaged across",n_sim,"simulations")) +
geom_line(size = 1) + geom_point() + theme_minimal() +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
donor_risk_mean_combined <- data.frame(case1 = donor_risk_mean_case1/(n_days*n_donors),
case2 = donor_risk_mean_case2/(n_days*n_donors),
case3 = donor_risk_mean_case3/(n_days*n_donors),
case4 = donor_risk_mean_case4/(n_days*n_donors),
case5 = donor_risk_mean_case5/(n_days*n_donors),
time = 1:n_days)
donor_risk_mean_combined_melted <- melt(donor_risk_mean_combined, id = 'time')
ggplot(data = donor_risk_mean_combined_melted, aes(y = value, x = time, color = variable)) +
labs(x = "Days", y = "", title = "Proportion of Donors Contracting Virus from Donation Site",
subtitle = paste("Average across",n_sim,"simulations")) +
geom_line(size = 1) + theme_minimal() + ylim(0,1) +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
# Varying interaction risk
interaction_risk_donor_combined <- data.frame(case1 = interaction_risk_results_donor_case1/(n_days*n_donors),
case2 = interaction_risk_results_donor_case2/(n_days*n_donors),
case3 = interaction_risk_results_donor_case3/(n_days*n_donors),
case4 = interaction_risk_results_donor_case4/(n_days*n_donors),
case5 = interaction_risk_results_donor_case5/(n_days*n_donors),
interaction = interaction_risk_vec)
interaction_risk_donor_combined_melted <- melt(interaction_risk_donor_combined, id = 'interaction')
ggplot(data = interaction_risk_donor_combined_melted, aes(y = value, x = interaction, color = variable)) +
labs(x = "Interaction Risk", y = "", title ="Total Proportion of Donors Contracting Virus from Donation Site",
subtitle = paste("Averaged across",n_sim,"simulations")) +
geom_line(size = 1) + geom_point() + theme_minimal() + ylim(0,1) +
theme(plot.title = element_text(size = 16), axis.title.y = element_text(size = 16))
